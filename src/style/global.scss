@import "./variables";

@each $colorKey, $color in $colors {
  .text-#{$colorKey} {
    color: $color;
  }
  .bg-#{$colorKey} {
    background-color: $color;
  }
  .border-#{$colorKey} {
    border: 1px solid $color;
  }
}
// text align
@each $var in (left, center, right) {
  .text-#{$var} {
    text-align: $var !important;
  }
}
// font-size
@for $i from 12 through 50 {
  .fs-#{$i} {
    font-size: $i * 1px;
  }
}
// text overflow
.text-ellipsis {
  display: inline-block;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
// width, height
.w-100 {
  width: 100%;
}
.h-100 {
  height: 100%;
}
// flex
.flex {
  display: flex;
}
.flex-column {
  flex-direction: column;
}
.flex-wrap {
  flex-wrap: wrap;
}
.flex-1 {
  flex: 1;
}
.flex-grow-1 {
  flex-grow: 1;
}
@each $key, $value in $flex-jc {
  .jc-#{$key} {
    justify-content: $value;
  }
}

@each $key, $value in $flex-ai {
  .ai-#{$key} {
    align-items: $value;
  }
}

// m-0, mx-0
@each $typeKey, $type in $spacing-types {
  // .mx-1 , .my-1
  @for $i from 1 through 50 {
    .#{$typeKey}x-#{$i} {
      #{$type}-left: $i * 1px;
      #{$type}-right: $i * 1px;
    }
    .#{$typeKey}y-#{$i} {
      #{$type}-top: $i * 1px;
      #{$type}-bottom: $i * 1px;
    }
  }
  // .mt-1
  @each $directionKey, $direction in $spacing-directions {
    @for $i from 1 through 50 {
      .#{$typeKey}#{$directionKey}-#{$i} {
        @if $direction != 0 {
          #{$type}-#{$direction}: $i * 1px;
        } @else {
          #{$type}: $i * 1px;
        }
      }
    }
  }
}
